<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>PROGRAM - 标签 - 锦枫紫兰</title>
        <link>/tags/program/</link>
        <description>PROGRAM - 标签 - 锦枫紫兰</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 03 Dec 2021 10:30:22 &#43;0800</lastBuildDate><atom:link href="/tags/program/" rel="self" type="application/rss+xml" /><item>
    <title>C/C&#43;&#43;第三方库</title>
    <link>/post/program-c-c&#43;&#43;-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</link>
    <pubDate>Fri, 03 Dec 2021 10:30:22 &#43;0800</pubDate><guid>/post/program-c-c&#43;&#43;-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/</guid>
    <description><![CDATA[1. GSL - GNU Scientific Library GNU Scientific库（GSL）是C和C++程序员的数字库。它是GNU通用公共许可下的自由软件。 该库提供了广泛的数学例程，如随]]></description>
</item>
<item>
    <title>跨设备（嵌入式-PC）</title>
    <link>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-6-%E8%B7%A8%E8%AE%BE%E5%A4%87/</link>
    <pubDate>Wed, 27 Oct 2021 16:05:30 &#43;0800</pubDate><guid>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-6-%E8%B7%A8%E8%AE%BE%E5%A4%87/</guid>
    <description><![CDATA[C++ 1. 空间和效率的平衡 在嵌入式开发中，单纯地加入class，不会影响代码的大小，也不会影响程序的效率。 默认参数和函数重载也不会带来代码大小和运]]></description>
</item>
<item>
    <title>PYTHON-POLORS</title>
    <link>/post/program-python-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93-polors/</link>
    <pubDate>Thu, 14 Oct 2021 11:36:11 &#43;0800</pubDate><guid>/post/program-python-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93-polors/</guid>
    <description><![CDATA[概述 相比较PANDAS来说，处理比较大的数据集会很快。]]></description>
</item>
<item>
    <title>Echarts</title>
    <link>/post/program-js-ts-echarts/</link>
    <pubDate>Mon, 02 Aug 2021 14:45:56 &#43;0800</pubDate><guid>/post/program-js-ts-echarts/</guid>
    <description><![CDATA[配置项详解 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65]]></description>
</item>
<item>
    <title>PROGRAM SQL</title>
    <link>/post/program-sql/</link>
    <pubDate>Fri, 09 Jul 2021 14:54:37 &#43;0800</pubDate><guid>/post/program-sql/</guid>
    <description><![CDATA[1. 创建表 1 2 3 4 5 6 7 8 9 10 11 -- 【SQLITE】 CREATE TABLE COMPANY ( ID INT PRIMARY KEY, -- 主键，唯一索引 NAME TEXT NOT NULL UNIQUE, -- UNIQUE 唯一索引 AGE INT NOT NULL , ADDRESS CHAR(50), SALARY REAL DEFAULT 50000.00, -- UNIQUE(column_name1,column_name2) -- 联合唯一 --]]></description>
</item>
<item>
    <title>QTCreater</title>
    <link>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E6%9E%B6%E6%9E%84-%E5%85%B6%E4%BB%96%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-qtcreater/</link>
    <pubDate>Sat, 08 May 2021 10:37:55 &#43;0800</pubDate><guid>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E6%9E%B6%E6%9E%84-%E5%85%B6%E4%BB%96%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-qtcreater/</guid>
    <description><![CDATA[QtCreater是插件设计架构，由插件管理器（负责插件的加载,管理,销毁等工作）和一堆插件（有一个叫core的插件,是QtCreator最]]></description>
</item>
<item>
    <title>架构设计模式</title>
    <link>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E6%9E%B6%E6%9E%84-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Sat, 08 May 2021 10:37:55 &#43;0800</pubDate><guid>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E6%9E%B6%E6%9E%84-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[插件设计架构 核心系统 核心系统包含两部分功能：1.最小功能集合,提供给各个插件模块使用,也就是插件如何使用核心系统的功能进行功能扩展;2.插件]]></description>
</item>
<item>
    <title>开源协议</title>
    <link>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/</link>
    <pubDate>Thu, 06 May 2021 10:42:19 &#43;0800</pubDate><guid>/post/program-%E8%B7%A8%E8%AF%AD%E8%A8%80-%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE/</guid>
    <description><![CDATA[1. GPL 只要在一个软件中使用(包括类库引用、修改后的代码或者衍生代码)GPL协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。]]></description>
</item>
<item>
    <title>LUA常用模块</title>
    <link>/post/program-lua-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</link>
    <pubDate>Wed, 21 Apr 2021 15:46:41 &#43;0800</pubDate><guid>/post/program-lua-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</guid>
    <description><![CDATA[1. bit LUA本身不支持位运算,所以需要bit模块。 1.1. 操作 1 2 3 4 bit.lshift(x, n) --逻辑左移 bit.rshift(x, n) --逻辑右移 bit.arshift(x, n) --算术右移 bit.band() --与 2. JSON 2.1. cjson 需要手动编译l]]></description>
</item>
<item>
    <title>PROGRAM C&#43;&#43; 核心准则</title>
    <link>/post/program-c&#43;&#43;-%E6%A0%B8%E5%BF%83%E5%87%86%E5%88%99/</link>
    <pubDate>Sat, 17 Apr 2021 11:05:58 &#43;0800</pubDate><guid>/post/program-c&#43;&#43;-%E6%A0%B8%E5%BF%83%E5%87%86%E5%88%99/</guid>
    <description><![CDATA[C.40 Define a constructor if a class has an invariant R.3: A raw pointer (a T*) is non-owning R.4: A raw reference (a T&amp;) is non-owning R.10: Avoid malloc() and free() 避免使用malloc和free malloc() and free() do not support construction and destruction, and do not mix well with new and delete. E E.28: Avoid error handling based]]></description>
</item>
</channel>
</rss>
